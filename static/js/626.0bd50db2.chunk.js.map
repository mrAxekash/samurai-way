{"version":3,"file":"static/js/626.0bd50db2.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/common/paginator/Pagination.module.css?8f86","components/common/paginator/Pagination.tsx","webpack://samurai-way/./src/components/Users/Users.module.css?b9d0","components/Users/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Pagination_selectedPage__Y0C3W\",\"pageNumber\":\"Pagination_pageNumber__J7jZP\",\"paginator\":\"Pagination_paginator__Wh-uW\",\"button\":\"Pagination_button__Q1az9\"};","import * as React from 'react';\r\nimport {useState} from 'react';\r\nimport style from './Pagination.module.css'\r\n\r\ntype Props = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize: number\r\n    onPageChanged: (page: number) => void\r\n};\r\n\r\nexport const Pagination = (props: Props) => {\r\n    const {totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10} = props\r\n    const[userCount, setUserCount] = useState(1)\r\n\r\n    let pagesCount: number = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages: number[] = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortionNumber] = useState(1)\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPageNumber = portionSize * portionNumber\r\n\r\n    return (\r\n        <div className={style.paginator}>\r\n            {portionNumber > 1 && <button className={style.button} onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>}\r\n            {pages.filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                return (\r\n                    <span key={p}\r\n                          className={` ${(currentPage === p ? style.selectedPage : '')} ${style.pageNumber}` }\r\n                          onClick={() => {onPageChanged(p)}}>\r\n                        {p}\r\n                    </span>\r\n                )\r\n            })}\r\n            {portionNumber <= portionCount && <button className={style.button} onClick={()=>setPortionNumber(portionNumber + 1)}>Next</button>}\r\n        </div>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Users_wrapper__bQLap\",\"usersAvatar\":\"Users_usersAvatar__0s+uQ\",\"usersContainer\":\"Users_usersContainer__Z56P6\",\"selectedPage\":\"Users_selectedPage__F32Rw\"};","import * as React from 'react';\r\nimport style from './Users.module.css'\r\nimport {UserStateType} from \"../../redux/users-reducer\";\r\nimport img from \"./img/pngtree-user-vector-avatar-png-image_1541962.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype Props = {\r\n    user: UserStateType\r\n    followingInProgress: number[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n};\r\n\r\nexport const User = (props: Props) => {\r\n    const {\r\n        user,\r\n        followingInProgress,\r\n        follow, unfollow\r\n    } = props\r\n\r\n    return (<div key={user.id}>\r\n            <div className={style.usersContainer}>\r\n                <div>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n\r\n                            <img src={user.photos.small === null ? img : user.photos.small} alt=\"avatar\"\r\n                                 className={style.usersAvatar}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    {user.followed ?\r\n                        <button disabled={followingInProgress.some(userId => userId === user.id)}\r\n                                onClick={() => {\r\n                                    follow(user.id)\r\n                                }}>Unfollow</button> :\r\n                        <button disabled={followingInProgress.some(userId => userId === user.id)}\r\n                                onClick={() => {\r\n                                    unfollow(user.id)\r\n                                }}>Follow</button>}\r\n                </div>\r\n                <div className={style.usersContainer}>\r\n                    <div>\r\n                        <h3>{user.name}</h3>\r\n                        <span>{user.status}</span>\r\n                    </div>\r\n                    <div>\r\n                        <div>{'u.location.country'}</div>\r\n                        <div>{'u.location.city'}</div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <span>\r\n            </span>\r\n        </div>\r\n    )\r\n};","import * as React from 'react';\r\nimport {UserStateType} from \"../../redux/users-reducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {Pagination} from \"../../components/common/paginator/Pagination\";\r\nimport {User} from \"../../components/Users/User\";\r\nimport styles from './Users.module.css'\r\n\r\ntype Props = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    users: UserStateType[]\r\n    onPageChanged: (page: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followInPropgress: (progressIsFetching: boolean, userId: number) => void\r\n    followingInProgress: number[]\r\n};\r\n\r\nexport const Users = (props: Props) => {\r\n    const {\r\n        pageSize,\r\n        onPageChanged,\r\n        isFetching,\r\n        currentPage,\r\n        followingInProgress,\r\n        follow,\r\n        followInPropgress,\r\n        unfollow,\r\n        users,\r\n        totalUsersCount,\r\n    } = props\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {props.isFetching ? <Preloader/> : null}\r\n\r\n            <Pagination pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChanged={onPageChanged}\r\n                        totalItemsCount={totalUsersCount}\r\n                        portionSize={10}/>\r\n\r\n            <h2>Users</h2>\r\n\r\n            {props.users.map((u: UserStateType) => {\r\n                return (<User key={u.id}\r\n                              user={u}\r\n                              followingInProgress={followingInProgress}\r\n                              follow={follow}\r\n                              unfollow={unfollow}/>\r\n                );\r\n            })\r\n            }\r\n        </div>);\r\n}","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {RootReducersType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersPage = (state: RootReducersType) => {\r\n\treturn state.usersPage\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersPage,(usersPage) => {\r\n\treturn usersPage\r\n})\r\n\r\nconst getPageSize = (state: RootReducersType) => {\r\n\treturn state.usersPage.pageSize\r\n}\r\n\r\n\r\nexport const pageSize = createSelector(getPageSize, (pageSize: number) => {\r\n\treturn pageSize\r\n})\r\n\r\n\r\nexport const getTotalUsersCount = (state: RootReducersType) => {\r\n\treturn state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: RootReducersType) => {\r\n\treturn state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: RootReducersType) => {\r\n\treturn state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: RootReducersType) => {\r\n\treturn state.usersPage.followingInProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {RootReducersType} from \"../../redux/redux-store\";\r\nimport {\r\n    follow,\r\n    followingInProgressAC, getUsersReduxThunk,\r\n    InitialStateType, isFetchingAC,\r\n    setChangeUsersPageAC, setTotalUsersCountAC,\r\n    setUsersAC, unfollow,\r\n    UserStateType\r\n} from \"../../redux/users-reducer\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    pageSize\r\n} from \"../../redux/users-selectors\";\r\n\r\nexport type AllUsersStateType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass UsersAPIContainer extends React.Component<AllUsersStateType> {\r\n\r\n    componentDidMount() {\r\n        const {pageSize, currentPage} = this.props;\r\n        this.props.getUsersReduxThunk(pageSize, currentPage)\r\n    }\r\n\r\n\r\n    onPageChanged = (p: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsersReduxThunk(pageSize, p)\r\n    }\r\n    render() {\r\n        return (\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users?.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                isFetching={this.props.isFetching}\r\n                followInPropgress={this.props.followInPropgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    users: InitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\n// const mapStateToProps = (state: RootReducersType): MapStateToPropsType => {\r\n//     return {\r\n//         users: state.usersPage,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = (state: RootReducersType): MapStateToPropsType => {\r\n    return {\r\n        //users: getUsersPage(state),\r\n        users: getUsers(state),\r\n        pageSize: pageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\ntype MapDispatchToPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    setUsers: (users: UserStateType[]) => void\r\n    changeUsersPage: (newUsersPage: number) => void\r\n    setTotalUsersCount: (totalItemsCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    followInPropgress: (progressFetching: boolean, userId: number) => void\r\n    getUsersReduxThunk: (pageSize: number, currentPage: number) => void\r\n}\r\n\r\nexport default compose<React.FC>(\r\n    //WithAuthRedirect,\r\n    connect(mapStateToProps, {\r\n    follow: follow,\r\n    unfollow: unfollow,\r\n    setUsers: setUsersAC,\r\n    changeUsersPage: setChangeUsersPageAC,\r\n    setTotalUsersCount: setTotalUsersCountAC,\r\n    toggleIsFetching: isFetchingAC,\r\n    followInPropgress: followingInProgressAC,\r\n    getUsersReduxThunk: getUsersReduxThunk\r\n}))(UsersAPIContainer)\r\n\r\n// export const UsersContainer = connect(mapStateToProps, {\r\n//     follow: follow,\r\n//     unfollow: unfollow,\r\n//     setUsers: setUsersAC,\r\n//     changeUsersPage: setChangeUsersPageAC,\r\n//     setTotalUsersCount: setTotalUsersCountAC,\r\n//     toggleIsFetching: isFetchingAC,\r\n//     followInPropgress: followingInProgressAC,\r\n//     getUsersReduxThunk: getUsersReduxThunk\r\n// })(UsersAPIContainer);\r\n"],"names":["Pagination","props","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","useState","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","style","onClick","filter","page","map","p","User","user","followingInProgress","follow","unfollow","to","id","src","photos","small","img","alt","followed","disabled","some","userId","name","status","Users","isFetching","followInPropgress","totalUsersCount","users","styles","Preloader","u","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","usersPage","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIContainer","getUsersReduxThunk","this","React","compose","connect","setUsers","setUsersAC","changeUsersPage","setChangeUsersPageAC","setTotalUsersCount","setTotalUsersCountAC","toggleIsFetching","isFetchingAC","followingInProgressAC"],"sourceRoot":""}